import React, { Component } from 'react'
import { Text, View, Alert, CheckBox, TouchableOpacity, StyleSheet, FlatList, TextInput } from 'react-native'

export default class ToDoList extends Component {
    constructor() {
        super()
        this.state = {
            arrayHolder: [],
            textInput_Holder: '',
            checkView: false,
            FlatListItem: [{
                title: 'ONE',
                isSelected:false
            },
            {
                title: 'TWO',
                isSelected:false
            },
            {
                title: 'THREE',
                isSelected:false
            },
            {
                title: 'FOUR',
                isSelected:false
            },
            {
                title: 'FIVE',
                isSelected:false
            }
            ],

        }
    }

    componentDidMount() {
        this.setState({ arrayHolder: [...this.state.FlatListItem] })
    }

    joinData = () => {
        this.state.FlatListItem.push({ title: this.state.textInput_Holder });
        this.setState({
            arrayHolder: [...this.state.FlatListItem],
        })
    }

    FlatListItemSeparator = () => {
        return (
            <View
                style={{
                    height: 1,
                    width: "100%",
                    backgroundColor: "#607D8B",
                }}
            />
        );
    }

    checkViewMethod = (item, index) => {
        let tempArr = this.state.arrayHolder
        tempArr[index].isSelected = !item.isSelected     
        this.setState({arrayHolder:tempArr })
     
        
    }

    GetItem(item) {
        Alert.alert(item);
    }

    ListEmpty = () => {
        return (
            //View to show when list is empty
            <View style={styles.container}>
                <Text style={[styles.item, styles.content]}>No Data Found</Text>
            </View>
        );
    };

    deleteItemById = (title) => {
        const filteredData = this.state.arrayHolder.filter(item => item.title !== title);
        this.setState({ arrayHolder: filteredData });
    }

    editItemById = (title) => {
        const filteredData = this.state.arrayHolder.find(item => item.title == title);
        console.log(filteredData)
    }

    render() {

        return (
            <View style={[styles.container]}>
                <View style={{ marginHorizontal: 20 }}>
                    <Text style={{ fontSize: 24, fontWeight: 'bold', marginTop: 50, marginBottom: 10, }} >TODO List</Text>
                    <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>
                        <TextInput
                            style={{ height: 40, padding: 10, flex: .8, borderColor: 'gray', borderWidth: 1, backgroundColor: 'white' }}
                            onChangeText={data => this.setState({ textInput_Holder: data })}
                            value={this.state.text}
                        />
                        <TouchableOpacity
                            style={{ color: 'white', backgroundColor: 'blue', flex: .15, justifyContent: 'center', }}
                            onPress={this.joinData} activeOpacity={0.7}
                        >
                            <Text style={{ alignSelf: 'center', fontSize: 18, color: 'white', textAlign: 'center', fontWeight: 'bold' }}>Add</Text>
                        </TouchableOpacity>
                    </View>
                    <FlatList
                        data={this.state.arrayHolder}
                        renderItem={({ item, index }) =>
                            //Single Item in list
                            <View style={{ flexDirection: 'row', flex: 1, justifyContent: 'space-between' }}>

                                <TouchableOpacity style={{ height: 15, width: 15, backgroundColor: 'white' }}
                                    onPress={() => this.checkViewMethod(item, index)}>
                                    {item.isSelected === true ?
                                        <View style={{ height: 15, width: 15, backgroundColor: 'blue' }}></View>
                                        :
                                        <View style={{ height: 15, width: 15, backgroundColor: 'red' }}></View>
                                    }
                                </TouchableOpacity>


                                <View style={{ borderRadius: 5, marginTop: 10, flex: .6, backgroundColor: 'white' }}>
                                    <TextInput
                                        style={[styles.item]}
                                        onChangeText={(text) => this.setState({ text })}
                                        // onPress={this.GetItem.bind(this, item.title)}
                                        value={item.title}
                                    />
                                </View>
                                <TouchableOpacity style={{ borderRadius: 5, flex: .17, marginTop: 10, backgroundColor: 'green', justifyContent: 'center', }}
                                    onPress={() => this.editItemById(item.title)}
                                >
                                    <Text style={{ textAlign: 'center', fontSize: 16, }}>edit</Text>
                                </TouchableOpacity>
                                <TouchableOpacity style={{ borderRadius: 5, flex: .17, marginTop: 10, backgroundColor: 'red', justifyContent: 'center', }}
                                    onPress={() => this.deleteItemById(item.title)}
                                >
                                    <Text style={{ textAlign: 'center', fontSize: 18, }}>delete</Text>
                                </TouchableOpacity>
                            </View>

                        }
                        extraData={this.state}
                        keyExtractor={(index) => index.toString()}
                        ListEmptyComponent={this.ListEmpty}
                    // ItemSeparatorComponent={this.FlatListItemSeparator}
                    />
                </View>
            </View>

        )
    }
}

const styles = StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: 'skyblue'

    },
    containerColor: {
        backgroundColor: 'aqua'
    },
    content: {
        alignSelf: 'center'
    },
    item: {
        padding: 10,
        fontSize: 18,
        height: 44,

    },

})
